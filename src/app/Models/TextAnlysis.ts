// Generated by https://quicktype.io

export interface TextAnalytic {
  languageDetection: LanguageDetection;
  keyPhrases: KeyPhrases;
  sentiment: Sentiment;
  entities: Entities;
  entityLinking: EntityLinking;
  entityPII: EntityPII;
}

export interface Entities {
  documents: EntitiesDocument[];
  errors: any[];
  modelversion: string;
}

export interface EntitiesDocument {
  id: string;
  entities: PurpleEntity[];
}

export interface PurpleEntity {
  text: string;
  category: string;
  subcategory: null | string;
  offset: number;
  length: number;
  confidencescore: number;
}

export interface EntityLinking {
  documents: EntityLinkingDocument[];
  errors: any[];
  modelversion: string;
}

export interface EntityLinkingDocument {
  id: string;
  entities: FluffyEntity[];
}

export interface FluffyEntity {
  name: string;
  matches: Match[];
  language: string;
  id: string;
  url: string;
  datasource: string;
}

export interface Match {
  text: string;
  offset: number;
  length: number;
  score: number;
}

export interface EntityPII {
  documents: EntityPIIDocument[];
  errors: any[];
  modelversion: string;
}

export interface EntityPIIDocument {
  id: string;
  entities: TentacledEntity[];
}

export interface TentacledEntity {
  text: string;
  category: string;
  subcategory: null | string;
  offset: number;
  length: string;
  confidencescore: number;
}

export interface KeyPhrases {
  documents: KeyPhrasesDocument[];
  errors: any[];
  modelversion: string;
}

export interface KeyPhrasesDocument {
  id: string;
  keyPhrases: string[];
}

export interface LanguageDetection {
  documents: LanguageDetectionDocument[];
  errors: any[];
  modelversion: string;
}

export interface LanguageDetectionDocument {
  id: string;
  detectedLanguage: DetectedLanguage;
}

export interface DetectedLanguage {
  name: string;
  iso6391Name: string;
  confidenceScore: number;
}

export interface Sentiment {
  documents: SentimentDocument[];
  errors: any[];
  modelversion: string;
}

export interface SentimentDocument {
  id: string;
  sentiment: string;
  confidenceScores: ConfidenceScores;
  sentences: Sentence[];
}

export interface ConfidenceScores {
  positive: number;
  neutral: number;
  negative: number;
}

export interface Sentence {
  sentiment: string;
  confidenceScores: ConfidenceScores;
  offset: number;
  length: number;
}
